#include <fstream>

using namespace std;

ifstream cin("recyclebin.in");
ofstream cout("recyclebin.out");

const int nmax = 1001;
int dp[nmax][2*nmax], v[nmax];

int main()
{
    int i,n, p = 1,ans = 0;
    cin >> n;
    for(i=1;i<=n;i++)
        cin >> v[i];
    while(p <= n)
        p = p * 2;
    for(i=1;i<=n;i++)
    {
        for(int mask = 0; mask < p; mask++)
        {
           dp[i][mask] = max(dp[i-1][mask], 0) + v[i];
            for(int p2 = 1; p2 < i; p2 *= 2)
            {
                if((mask & p2) == p2)
                    dp[i][mask] = max(dp[i][mask], dp[i-p2][mask^p2]);
            }
            ans = max(ans, dp[i][mask]);
        }
    }
    cout << ans;
    return 0;
}

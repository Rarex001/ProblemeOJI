#include <fstream>
#include <algorithm>
#include <set>

using namespace std;

ifstream cin("ramen.in");
ofstream cout("ramen.out");

const int nmax = 2e5 + 7;

multiset<int>ms;
int ans[nmax];

struct person
{
    int t;
    int poz;
    int id;
}v[nmax];

bool cmp(person a,person b)
{
    if(a.poz == b.poz)
        return a.t < b.t;
    return a.poz < b.poz;
}

int main()
{
    int n,d,i;
    cin >> n >> d;
    for(i=1;i<=n;i++)
    {
        cin >> v[i].t >> v[i].poz;
        ms.insert(v[i].t);
        v[i].id = i;
    }
    sort(v+1,v+n+1,cmp);
    for(i=1;i<=n;i++)
    {
       auto it = ms.lower_bound(v[i].t - v[i].poz - d);
       ms.erase(ms.find(*it));
       ans[v[i].id] = *it + d + v[i].poz;
    }
    for(i=1;i<=n;i++)
        cout << ans[i] << '\n';
    return 0;
}
